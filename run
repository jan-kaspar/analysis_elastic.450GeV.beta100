#!/bin/bash

#----------------------------------------------------------------------------------------------------

function PrintUsage()
{
	echo -e "USAGE: $0 <option> <src file> <option> <dir> <dir> ..."
	echo -e "OPTIONS"

	echo -e "	-h, --help		print this help and exit"
	echo -e "	-d <string>		select diagonals"
	echo -e "	-dcomb			select 'combined' diagonal"
	echo -e "	-danti			select anti-diagonals"
	echo -e "	-O <option>		pass the option to the program"
	echo -e "	-no-bckg		do no run programs in background"
#	echo -e "	-batch			prepare job for LXBATCH instead of executing locally"
#	echo -e "	-submit			submit job to LXBATCH, implies -lxbatch option"
}

#----------------------------------------------------------------------------------------------------

function RunOneDiagonal()
{
	local optionsStr=""
	if [ ! "$run_options" == "" ]
	then
		optionsStr=" ($run_options)"
	fi

	label="$tag @ $dir:$diag"
	log="${tag}_${diag}.log"

	echo "$label > running$optionsStr"
	{ time "$binDir/$bin" $run_options -dgn "$diag" ; } &> "$log"
	errCode="$?"
	case "$errCode" in
		0)
			echo "$label > done"
			;;

		$rcIncompatibleDiagonal)
			rm "$log"
			;;

		*)
			echo "$label > run error ($errCode)"
			tail -n 5 "$log"
			return 1
			;;
	esac
}

#----------------------------------------------------------------------------------------------------

function RunOneDirectory()
{
	cd "$dir"

	for prog in ${programs[*]}
	do
		tag="${prog%.*}"
		bin=".$tag"

		for diag in ${diagonals[*]}
		do
			if [ "$runInBackground" == "y" ]
			then
				RunOneDiagonal &
			else
				RunOneDiagonal || exit 10
			fi
		done

		wait
	done

	cd - &>/dev/null
}

#----------------------------------------------------------------------------------------------------

directories=()
programs=()
diagonals=("45b_56t" "45t_56b" "combined")

run_options=""

runInBackground="y"

batch="n"
submit="n"

rcIncompatibleDiagonal=123

#----------------------------------------------------------------------------------------------------

if [ $# -le 0 ]
then
	PrintUsage
	exit 1
fi

while [ -n "$1" ]
do
	case "$1" in
		"-h" | "--help")
			PrintUsage
			exit 1
			;;

		"-d")
			shift
			diagonals=($1)
			;;

		"-dcomb")
			diagonals=("combined")
			;;

		"-danti")
			diagonals=("45b_56b" "45t_56t")
			;;

		"-O")
			shift
			run_options="$1"
			;;

		"-no-bckg")
			runInBackground="n"
			;;

		"-lxbatch")
			lxbatch="y"
			;;

		"-submit")
			lxbatch="y"
			submit="y"
			;;

		*)
			if [ -f "$1" ]
			then
				programs+=("$1")
			else
				if [ -f "$1/config.py" ]
				then
					directories+=("$1")
				else
					echo "ERROR: $1 is not understood."
					PrintUsage
					exit 2
				fi
			fi
			;;
	esac

	shift
done

for prog in ${programs}
do
	target=".${prog%.*}"
	make "$target" || exit 3
done

binDir=`pwd -P`

for dir in ${directories[*]}
do
	if [ "$runInBackground" == "y" ]
	then
		RunOneDirectory &
	else
		RunOneDirectory
	fi
done
